{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\work\\\\proj4thyear\\\\rn-starter\\\\src\\\\screens\\\\ProfileScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\n\nvar ProfileScreen = function (_React$Component) {\n  _inherits(ProfileScreen, _React$Component);\n\n  var _super = _createSuper(ProfileScreen);\n\n  function ProfileScreen() {\n    _classCallCheck(this, ProfileScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ProfileScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var apiUrl = 'https://api.github.com/users/hacktivist123/repos';\n      fetch(apiUrl).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        return console.log('This is your data', data);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 12\n        }\n      }, \"my Component has Mounted, Check the browser 'console' \");\n    }\n  }]);\n\n  return ProfileScreen;\n}(React.Component);\n\nexport default ProfileScreen;","map":{"version":3,"sources":["C:/work/proj4thyear/rn-starter/src/screens/ProfileScreen.js"],"names":["React","ProfileScreen","apiUrl","fetch","then","response","json","data","console","log","Component"],"mappings":";;;;;;;;;;;AA8CA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,a;;;;;;;;;;;;;wCACgB;AAClB,UAAMC,MAAM,GAAG,kDAAf;AACAC,MAAAA,KAAK,CAACD,MAAD,CAAL,CACGE,IADH,CACQ,UAACC,QAAD;AAAA,eAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,OADR,EAEGF,IAFH,CAEQ,UAACG,IAAD;AAAA,eAAUC,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,IAAjC,CAAV;AAAA,OAFR;AAGD;;;6BACQ;AACP,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEAAP;AACD;;;;EATyBP,KAAK,CAACU,S;;AAWlC,eAAeT,aAAf","sourcesContent":["/*\r\nimport React from 'react';\r\nimport { Text, StyleSheet, View, Button, TouchableOpacity, TextInput } from 'react-native';\r\nimport InputBox from '../components/InputBox';\r\n\r\n\r\nconst LoginScreen = ({ navigation }) => {\r\n  return (\r\n    <View style={styles.bg}>\r\n\r\n      <Button\r\n        onPress={() => navigation.navigate('Login')}\r\n        title=\"Logout\"\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  text: {\r\n    fontSize: 30,\r\n    fontWeight: 'bold',\r\n    paddingBottom: 20,\r\n    paddingTop: 20,\r\n    alignSelf: 'center'\r\n  },\r\n  input: {\r\n      margin: 15,\r\n      borderColor: 'black',\r\n      borderWidth: 1\r\n  },\r\n  bg: {\r\n    backgroundColor: 'white',\r\n    flexDirection: 'column'\r\n  },\r\n  asktext: {\r\n    fontSize: 10,\r\n    color: 'orange',\r\n    paddingBottom: 20,\r\n    paddingLeft: 20\r\n  },\r\n});\r\n\r\nexport default LoginScreen;\r\n*/\r\n\r\nimport React from 'react';\r\n\r\nclass ProfileScreen extends React.Component {\r\n  componentDidMount() {\r\n    const apiUrl = 'https://api.github.com/users/hacktivist123/repos';\r\n    fetch(apiUrl)\r\n      .then((response) => response.json())\r\n      .then((data) => console.log('This is your data', data));\r\n  }\r\n  render() {\r\n    return <h1>my Component has Mounted, Check the browser 'console' </h1>;\r\n  }\r\n}\r\nexport default ProfileScreen;"]},"metadata":{},"sourceType":"module"}