{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\work\\\\proj4thyear\\\\rn-starter\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Contacts from 'src/components/contacts';\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      contacts: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Contacts, {\n        contacts: this.state.contacts,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('http://jsonplaceholder.typicode.com/users').then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        _this2.setState({\n          contacts: data\n        });\n      }).catch(console.log);\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:/work/proj4thyear/rn-starter/App.js"],"names":["React","Component","Contacts","App","state","contacts","fetch","then","res","json","data","setState","catch","console","log"],"mappings":";;;;;;;;;;;AA0IA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,QAAP,MAAqB,yBAArB;;IAEMC,G;;;;;;;;;;;;;;;UAOFC,K,GAAQ;AACJC,MAAAA,QAAQ,EAAE;AADN,K;;;;;;6BANC;AACL,aACI,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGH;;;wCAMmB;AAAA;;AAChBC,MAAAA,KAAK,CAAC,2CAAD,CAAL,CACKC,IADL,CACU,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADb,EAEKF,IAFL,CAEU,UAACG,IAAD,EAAU;AACZ,QAAA,MAAI,CAACC,QAAL,CAAc;AAAEN,UAAAA,QAAQ,EAAEK;AAAZ,SAAd;AACH,OAJL,EAKKE,KALL,CAKWC,OAAO,CAACC,GALnB;AAMH;;;;EAlBab,S;;AAqBlB,eAAeE,GAAf","sourcesContent":["/*\nimport { createStackNavigator} from 'react-navigation-stack';\nimport React from 'react';\n\n\nimport ListScreen from './src/screens/ListScreen';\nimport MenuScreen from './src/screens/MenuScreen';\nimport LoginScreen from './src/screens/LoginScreen';\nimport CanteenScreen from './src/screens/CanteenScreen';\nimport ShopScreen from './src/screens/ShopScreen';\nimport FavouriteScreen from './src/screens/FavouriteScreen';\nimport SignupScreen from './src/screens/SignupScreen';\nimport ProfileScreen from './src/screens/ProfileScreen';\n\nimport {StyleSheet, Text, View,Button} from 'react-native';  \nimport {createAppContainer} from 'react-navigation';  \nimport { createMaterialBottomTabNavigator } from 'react-navigation-material-bottom-tabs';  \nimport Icon from 'react-native-vector-icons/Ionicons';\nimport { createSwitchNavigator} from 'react-navigation';\nimport { createBottomTabNavigator } from 'react-navigation-tabs';\n\n\n\nconst switchNavigator = createSwitchNavigator({\n    loginFlow: createStackNavigator({\n      Login: LoginScreen,\n      Sign: SignupScreen,\n    }),\n    mainFlow: createStackNavigator({\n      TabNav: createMaterialBottomTabNavigator({\n        Canteen: createStackNavigator({\n            Canteen:  CanteenScreen,\n            Shop: ShopScreen,\n          }),\n          Favourite: createStackNavigator({\n            Favourite:  FavouriteScreen,\n            Shop: ShopScreen\n          }),\n          Cart: createStackNavigator({\n            List:  ListScreen\n          }),\n          Profile: createStackNavigator({\n            Profile:  ProfileScreen\n          }),\n        },\n    {\n        navigationOptions: { \n            headerShown:false }\n    }),\n      Menuflow: createSwitchNavigator({\n        Menu:  MenuScreen\n      }),\n    }),\n  });\n  \n\n  /*\nconst navigator = createStackNavigator(\n  {\n    Login: LoginScreen,\n    Sign: SignupScreen,\n    Canteen: CanteenScreen,\n    Menu: MenuScreen,\n    Shop: ShopScreen\n\n  },\n  {\n    initialRouteName: 'Canteen',\n    defaultNavigationOptions: {\n      title: 'App',\n    },\n  }\n);\n\n\n\nconst TabNavigator = createMaterialBottomTabNavigator(  \n    {  \n        Home: { screen: CanteenScreen,  \n            navigationOptions:{  \n                tabBarLabel:'Shops',  \n                tabBarIcon: ({ tintColor }) => (  \n                    <View>  \n                        <Icon style={[{color: tintColor}]} size={25} name={'ios-home'}/>  \n                    </View>),  \n            }  \n        },   \n        Image: { screen: FavouriteScreen,  \n            navigationOptions:{  \n                tabBarLabel:'Favourite',  \n                tabBarIcon: ({ tintColor }) => (  \n                    <View>  \n                        <Icon style={[{color: tintColor}]} size={25} name={'ios-images'}/>  \n                    </View>),  \n                activeColor: '#615af6',  \n                inactiveColor: '#46f6d7',  \n                barStyle: { backgroundColor: '#67baf6' },  \n            }  \n        },  \n        Cart: {  \n            screen: ListScreen,  \n            navigationOptions:{  \n                tabBarLabel:'Cart',  \n                tabBarIcon: ({ tintColor }) => (  \n                    <View>  \n                        <Icon style={[{color: tintColor}]} size={25} name={'ios-cart'}/>  \n                    </View>),  \n            }  \n        },\n        Profile: { screen: ProfileScreen,  \n          navigationOptions:{  \n              tabBarLabel:'Profile',  \n              tabBarIcon: ({ tintColor }) => (  \n                  <View>  \n                      <Icon style={[{color: tintColor}]} size={25} name={'ios-person'}/>  \n                  </View>),  \n              activeColor: '#f60c0d',  \n              inactiveColor: '#f65a22',  \n              barStyle: { backgroundColor: '#f69b31' },  \n          }  \n      },   \n    },  \n    {  \n      initialRouteName: \"Home\",  \n      activeColor: '#f0edf6',  \n      inactiveColor: '#226557',  \n      barStyle: { backgroundColor: '#3BAD87' },  \n    },  \n);  \n  \nconst App = createAppContainer(switchNavigator);\n\nexport default () => {\n    return <App/>;\n}\n\n*/\n\nimport React, {Component} from 'react';\nimport Contacts from 'src/components/contacts';\n\nclass App extends Component {\n    render() {\n        return (\n            <Contacts contacts={this.state.contacts} />\n        )\n    }\n\n    state = {\n        contacts: []\n    };\n\n    componentDidMount() {\n        fetch('http://jsonplaceholder.typicode.com/users')\n            .then(res => res.json())\n            .then((data) => {\n                this.setState({ contacts: data })\n            })\n            .catch(console.log)\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}