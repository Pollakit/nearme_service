{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/objectDestructuringEmpty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\work\\\\proj4thyear\\\\rn-starter\\\\src\\\\screens\\\\LoginScreen.js\";\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { useState } from \"react\";\nimport { PrimaryButton } from \"../components/Button\";\n\nvar SignupScreen = function SignupScreen(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      fname = _useState6[0],\n      setFname = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      lname = _useState8[0],\n      setLname = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      cpassword = _useState10[0],\n      setCpassword = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      username = _useState12[0],\n      setUsername = _useState12[1];\n};\n\nvar LoginScreen = function LoginScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  var apiUrl = 'https://nearme-kmitl.herokuapp.com/api/dj-rest-auth/login/';\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      email = _useState14[0],\n      setEmail = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      password = _useState16[0],\n      setPassword = _useState16[1];\n\n  var _useState17 = useState(\"\"),\n      _useState18 = _slicedToArray(_useState17, 2),\n      username = _useState18[0],\n      setUsername = _useState18[1];\n\n  React.useEffect(function () {\n    fetch(apiUrl, {\n      method: 'post',\n      withCredentials: true,\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: \"shop01\",\n        email: \"shop01@example.com\",\n        password: \"pp123456789\"\n      })\n    }).then(function (response) {\n      return response.text();\n    }).then(function (data) {\n      return console.log(data);\n    }).catch(function (error) {\n      return console.log(\"Error detected: \" + error);\n    });\n  }, []);\n  return React.createElement(View, {\n    style: styles.bg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"Near me\"), React.createElement(View, {\n    style: [styles.background, {\n      marginBottom: 20\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.iconstyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, \"Username\"), React.createElement(TextInput, {\n    style: styles.inputstyle,\n    placeholder: \"Username.\",\n    placeholderTextColor: \"#003f5c\",\n    onChangeText: function onChangeText(username) {\n      return setUsername(username);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  })), React.createElement(View, {\n    style: styles.background,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.iconstyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"Email\"), React.createElement(TextInput, {\n    style: styles.inputstyle,\n    placeholder: \"Email.\",\n    placeholderTextColor: \"#003f5c\",\n    onChangeText: function onChangeText(email) {\n      return setEmail(email);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('Sign');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.asktext,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"Don't have an account? sign in with us here!\")), React.createElement(View, {\n    style: styles.background,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.iconstyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"Password\"), React.createElement(TextInput, {\n    style: styles.inputstyle,\n    placeholder: \"Password.\",\n    placeholderTextColor: \"#003f5c\",\n    secureTextEntry: true,\n    onChangeText: function onChangeText(password) {\n      return setPassword(password);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  })), React.createElement(TouchableOpacity, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.asktext,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"Forgot password\")), React.createElement(PrimaryButton, {\n    onPress: function onPress() {\n      if (email.trim() === \"\" || password.trim() === \"\" || username.trim() === \"\") {} else {\n        {\n          navigation.navigate('Canteen');\n          console.log(email);\n        }\n        ;\n      }\n    },\n    title: \"Login\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  text: {\n    fontSize: 30,\n    fontWeight: 'bold',\n    paddingBottom: 20,\n    paddingTop: 20,\n    alignSelf: 'center'\n  },\n  input: {\n    margin: 15,\n    borderColor: 'black',\n    borderWidth: 1\n  },\n  bg: {\n    backgroundColor: 'white',\n    flexDirection: 'column'\n  },\n  asktext: {\n    fontSize: 10,\n    color: 'orange',\n    paddingBottom: 20,\n    paddingLeft: 20\n  },\n  background: {\n    backgroundColor: '#F0EEEE',\n    borderRadius: 10,\n    marginHorizontal: 15,\n    height: 50,\n    flexDirection: 'column',\n    marginTop: 10\n  },\n  inputstyle: {\n    fontSize: 14,\n    paddingLeft: 20\n  },\n  iconstyle: {\n    fontSize: 14,\n    marginHorizontal: 10,\n    fontWeight: 'bold'\n  }\n});\nexport default LoginScreen;","map":{"version":3,"sources":["C:/work/proj4thyear/rn-starter/src/screens/LoginScreen.js"],"names":["React","useState","PrimaryButton","SignupScreen","email","setEmail","password","setPassword","fname","setFname","lname","setLname","cpassword","setCpassword","username","setUsername","LoginScreen","navigation","apiUrl","useEffect","fetch","method","withCredentials","headers","body","JSON","stringify","then","response","text","data","console","log","catch","error","styles","bg","background","marginBottom","iconstyle","inputstyle","navigate","asktext","trim","StyleSheet","create","fontSize","fontWeight","paddingBottom","paddingTop","alignSelf","input","margin","borderColor","borderWidth","backgroundColor","flexDirection","color","paddingLeft","borderRadius","marginHorizontal","height","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Text, StyleSheet, View, TouchableOpacity, TextInput } from 'react-native';\r\nimport { useState } from \"react\";\r\nimport {PrimaryButton} from '../components/Button';\r\n\r\nconst SignupScreen = ({}) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [fname, setFname] = useState(\"\");\r\n  const [lname, setLname] = useState(\"\");\r\n  const [cpassword, setCpassword] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n}\r\n\r\nconst LoginScreen = ({ navigation }) => {\r\n  const apiUrl = 'https://nearme-kmitl.herokuapp.com/api/dj-rest-auth/login/';\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    fetch(apiUrl, {\r\n      //mode: 'no-cors', \r\n      method: 'post',\r\n      withCredentials: true,\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(\r\n        {\r\n          username: \"shop01\",\r\n          email: \"shop01@example.com\",\r\n          password: \"pp123456789\",\r\n        }\r\n      )\r\n    }).then(response => response.text())\r\n    .then(data => console.log(data))    \r\n    .catch(error => console.log(\"Error detected: \" + error))                                \r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.bg}>\r\n      <Text style={styles.text}>Near me</Text >\r\n\r\n      <View style={[styles.background, {marginBottom:20} ]}>\r\n        <Text style={styles.iconstyle}>Username</Text>\r\n        <TextInput style={styles.inputstyle}\r\n          placeholder=\"Username.\"\r\n          placeholderTextColor=\"#003f5c\"\r\n          onChangeText={(username) => setUsername(username)}/>\r\n      </View>\r\n\r\n      <View style={styles.background}>\r\n        <Text style={styles.iconstyle}>Email</Text>\r\n        <TextInput style={styles.inputstyle}\r\n          placeholder=\"Email.\"\r\n          placeholderTextColor=\"#003f5c\"\r\n          onChangeText={(email) => setEmail(email)}/>\r\n      </View>\r\n\r\n      <TouchableOpacity onPress={() => navigation.navigate('Sign')}>\r\n        <Text style={styles.asktext}>Don't have an account? sign in with us here!</Text>\r\n      </TouchableOpacity>\r\n\r\n      <View style={styles.background}>\r\n        <Text style={styles.iconstyle}>Password</Text>\r\n        <TextInput style={styles.inputstyle}\r\n          placeholder=\"Password.\"\r\n          placeholderTextColor=\"#003f5c\"\r\n          secureTextEntry={true}\r\n          onChangeText={(password) => setPassword(password)}/>\r\n      </View>\r\n\r\n      <TouchableOpacity>\r\n        <Text style={styles.asktext}>Forgot password</Text>\r\n      </TouchableOpacity>\r\n\r\n      <PrimaryButton\r\n        //onPress={() => {navigation.navigate('Canteen'); console.log(password)}}\r\n        onPress={() => {\r\n          if (email.trim() === \"\" || password.trim() === \"\" || username.trim() === \"\") {\r\n          } \r\n          else {\r\n            {navigation.navigate('Canteen'); console.log(email)};\r\n          }\r\n        }}\r\n        title=\"Login\"\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  text: {\r\n    fontSize: 30,\r\n    fontWeight: 'bold',\r\n    paddingBottom: 20,\r\n    paddingTop: 20,\r\n    alignSelf: 'center'\r\n  },\r\n  input: {\r\n      margin: 15,\r\n      borderColor: 'black',\r\n      borderWidth: 1\r\n  },\r\n  bg: {\r\n    backgroundColor: 'white',\r\n    flexDirection: 'column'\r\n  },\r\n  asktext: {\r\n    fontSize: 10,\r\n    color: 'orange',\r\n    paddingBottom: 20,\r\n    paddingLeft: 20\r\n  },\r\n  background: {\r\n    backgroundColor: '#F0EEEE',\r\n    borderRadius: 10,\r\n    marginHorizontal: 15,\r\n    height: 50,\r\n    flexDirection: 'column',\r\n    marginTop: 10\r\n  },\r\n  inputstyle: {\r\n    fontSize: 14,\r\n    paddingLeft: 20\r\n  },\r\n  iconstyle:{\r\n    fontSize: 14,\r\n    marginHorizontal: 10,\r\n    fontWeight: 'bold'\r\n  }\r\n});\r\n\r\nexport default LoginScreen;\r\n\r\n\r\n/*\r\nimport React from 'react';\r\nimport { Text, StyleSheet, View, Button, TouchableOpacity, TextInput} from 'react-native';\r\nimport { useState } from \"react\";\r\nimport InputBox from '../components/InputBox';\r\nimport {PrimaryButton} from '../components/Button';\r\n\r\nclass LoginScreen extends React.Component {\r\n\r\n  componentDidMount() {\r\n    const apiUrl = 'https://nearme-kmitl.herokuapp.com/api/accounts/customers/';\r\n    fetch(apiUrl, {\r\n      //mode: 'no-cors', \r\n      method: 'post',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(\r\n        {\r\n          user: {\r\n            username: \"cus01\",\r\n            email: \"cus01@example.com\",\r\n            first_name: \"Cus\",\r\n            last_name: \"One\",\r\n            password: \"123456789\",\r\n            phone: \"0888888888\"\r\n          }\r\n        }\r\n      )\r\n    }).then(response => response.text())\r\n    .then(data => console.log(data))    \r\n    .catch(error => console.log(\"Error detected: \" + error))                                \r\n  }\r\n\r\n  render() {\r\n    return <h1>Sent mock data to server</h1>;\r\n  }\r\n\r\n}\r\n\r\nexport default LoginScreen;\r\n*/"]},"metadata":{},"sourceType":"module"}