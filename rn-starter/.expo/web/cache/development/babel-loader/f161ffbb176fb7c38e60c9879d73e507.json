{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\work\\\\proj4thyear\\\\rn-starter\\\\src\\\\screens\\\\SignupScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { useState } from \"react\";\nimport InputBox from \"../components/InputBox\";\nimport { PrimaryButton } from \"../components/Button\";\n\nvar SignupScreen = function (_React$Component) {\n  _inherits(SignupScreen, _React$Component);\n\n  var _super = _createSuper(SignupScreen);\n\n  function SignupScreen() {\n    _classCallCheck(this, SignupScreen);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SignupScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var apiUrl = 'https://average-bullfrog-29.loca.lt//api/dj-rest-auth/login/';\n      fetch(apiUrl, {\n        mode: 'no-cors',\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: \"shop01\",\n          email: \"shop01@example.com\",\n          password: \"pp123456789\"\n        })\n      }).then(function (response) {\n        return response.text();\n      }).then(function (data) {\n        return console.log(data);\n      }).catch(function (error) {\n        return console.log(\"Error detected: \" + error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 12\n        }\n      }, \"Sent mock data to server\");\n    }\n  }]);\n\n  return SignupScreen;\n}(React.Component);\n\nexport default SignupScreen;","map":{"version":3,"sources":["C:/work/proj4thyear/rn-starter/src/screens/SignupScreen.js"],"names":["React","useState","InputBox","PrimaryButton","SignupScreen","apiUrl","fetch","mode","method","headers","body","JSON","stringify","username","email","password","then","response","text","data","console","log","catch","error","Component"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;AAEA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP;AACA,SAAQC,aAAR;;IAoJMC,Y;;;;;;;;;;;;;wCAEgB;AAClB,UAAMC,MAAM,GAAG,8DAAf;AACAC,MAAAA,KAAK,CAACD,MAAD,EAAS;AACZE,QAAAA,IAAI,EAAE,SADM;AAEZC,QAAAA,MAAM,EAAE,MAFI;AAGZC,QAAAA,OAAO,EAAE;AACP,oBAAU,kBADH;AAEP,0BAAgB;AAFT,SAHG;AAOZC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CACJ;AACEC,UAAAA,QAAQ,EAAE,QADZ;AAEEC,UAAAA,KAAK,EAAE,oBAFT;AAGEC,UAAAA,QAAQ,EAAE;AAHZ,SADI;AAPM,OAAT,CAAL,CAcGC,IAdH,CAcQ,UAAAC,QAAQ;AAAA,eAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,OAdhB,EAeCF,IAfD,CAeM,UAAAG,IAAI;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAJ;AAAA,OAfV,EAgBCG,KAhBD,CAgBO,UAAAC,KAAK;AAAA,eAAIH,OAAO,CAACC,GAAR,CAAY,qBAAqBE,KAAjC,CAAJ;AAAA,OAhBZ;AAiBD;;;6BAEQ;AACP,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAP;AACD;;;;EAzBwBvB,KAAK,CAACwB,S;;AA6BjC,eAAepB,YAAf","sourcesContent":["import React from 'react';\r\nimport { Text, StyleSheet, View, Button, TouchableOpacity, TextInput} from 'react-native';\r\nimport { useState } from \"react\";\r\nimport InputBox from '../components/InputBox';\r\nimport {PrimaryButton} from '../components/Button';\r\n\r\n/*\r\nfetch('Your URL to fetch data from', {\r\n  method: 'POST',\r\n  headers: {\r\n    Accept: 'application/json',\r\n    'Content-Type': 'application/json',\r\n  },\r\n  body: JSON.stringify({\r\n    firstParam: 'yourValue',\r\n    secondParam: 'yourOtherValue',\r\n  }),\r\n});\r\n\r\nvar data = new FormData();\r\n  data.append(\"username\", \"ABCD\");\r\n  data.append(\"email\", \"1234\");\r\n  data.append(\"first_name\", \"ABCD\");\r\n  data.append(\"last_name\", \"1234\");\r\n  data.append(\"password\", \"ABCD\");\r\n  data.append(\"phone\", \"1234\");\r\n  data.append(\"type\", \"ABCD\");\r\n\r\nvar user = new FormData();\r\n  user.append(\"user\", data)\r\n*/\r\n\r\n/*\r\nconst SignupScreen = ({ navigation }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [fname, setFname] = useState(\"\");\r\n  const [lname, setLname] = useState(\"\");\r\n  const [cpassword, setCpassword] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  return (\r\n    <View style={styles.bg}>\r\n      <Text style={styles.text}>Near me</Text >\r\n\r\n      <View style={[styles.background]}>\r\n        <Text style={styles.iconstyle}>Email</Text>\r\n        <TextInput style={styles.inputstyle}\r\n          placeholder=\"Email.\"\r\n          placeholderTextColor=\"#003f5c\"\r\n          onChangeText={(email) => setEmail(email)}/>\r\n      </View>\r\n\r\n      <TouchableOpacity onPress={() => navigation.navigate('Login')}>\r\n        <Text style={styles.asktext}>Have an account already, login here</Text>\r\n      </TouchableOpacity>\r\n\r\n      <View style={[styles.background]}>\r\n        <Text style={styles.iconstyle}>First name</Text>\r\n        <TextInput style={styles.inputstyle}\r\n          placeholder=\"John\"\r\n          placeholderTextColor=\"#003f5c\"\r\n          onChangeText={(fname) => setFname(fname)}/>\r\n      </View>\r\n\r\n      <View style={[styles.background, {marginBottom:20} ]}>\r\n        <Text style={styles.iconstyle}>Last name</Text>\r\n        <TextInput style={styles.inputstyle}\r\n          placeholder=\"Doe\"\r\n          placeholderTextColor=\"#003f5c\"\r\n          onChangeText={(lname) => setLname(lname)}/>\r\n      </View>\r\n\r\n      <View style={[styles.background, {marginBottom:20} ]}>\r\n        <Text style={styles.iconstyle}>Username</Text>\r\n        <TextInput style={styles.inputstyle}\r\n          placeholder=\"Username.\"\r\n          placeholderTextColor=\"#003f5c\"\r\n          onChangeText={(username) => setUsername(username)}/>\r\n      </View>\r\n\r\n      <View style={[styles.background]}>\r\n        <Text style={styles.iconstyle}>Password</Text>\r\n        <TextInput style={styles.inputstyle}\r\n          placeholder=\"Password.\"\r\n          placeholderTextColor=\"#003f5c\"\r\n          onChangeText={(password) => setPassword(password)}/>\r\n      </View>\r\n\r\n      <View style={[styles.background, {marginBottom:20} ]}>\r\n        <Text style={styles.iconstyle}>Confirm Password</Text>\r\n        <TextInput style={styles.inputstyle}\r\n          placeholder=\"Retype password.\"\r\n          placeholderTextColor=\"#003f5c\"\r\n          onChangeText={(cpassword) => setCpassword(cpassword)}/>\r\n      </View>\r\n\r\n      <PrimaryButton\r\n        onPress={() => navigation.navigate('Home')}\r\n        title=\"Signup\"\r\n      />\r\n    </View>\r\n    \r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  text: {\r\n    fontSize: 30,\r\n    fontWeight: 'bold',\r\n    paddingBottom: 20,\r\n    paddingTop: 20,\r\n    alignSelf: 'center'\r\n  },\r\n  input: {\r\n      margin: 15,\r\n      borderColor: 'black',\r\n      borderWidth: 1\r\n  },\r\n  bg: {\r\n    backgroundColor: 'white',\r\n    flexDirection: 'column'\r\n  },\r\n  asktext: {\r\n    fontSize: 10,\r\n    color: 'orange',\r\n    paddingBottom: 20,\r\n    paddingLeft: 20\r\n  },\r\n  background: {\r\n    backgroundColor: '#F0EEEE',\r\n    borderRadius: 10,\r\n    marginHorizontal: 15,\r\n    height: 50,\r\n    flexDirection: 'column',\r\n    marginTop: 10\r\n  },\r\n  inputstyle: {\r\n    fontSize: 14,\r\n    paddingLeft: 20\r\n  },\r\n  iconstyle:{\r\n    fontSize: 14,\r\n    marginHorizontal: 10,\r\n    fontWeight: 'bold'\r\n  }\r\n});\r\n\r\n\r\nexport default SignupScreen;\r\n*/\r\n\r\n\r\nclass SignupScreen extends React.Component {\r\n\r\n  componentDidMount() {\r\n    const apiUrl = 'https://average-bullfrog-29.loca.lt//api/dj-rest-auth/login/';\r\n    fetch(apiUrl, {\r\n      mode: 'no-cors', \r\n      method: 'post',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(\r\n        {\r\n          username: \"shop01\",\r\n          email: \"shop01@example.com\",\r\n          password: \"pp123456789\",\r\n        }\r\n      )\r\n    }).then(response => response.text())\r\n    .then(data => console.log(data))    \r\n    .catch(error => console.log(\"Error detected: \" + error))                                \r\n  }\r\n\r\n  render() {\r\n    return <h1>Sent mock data to server</h1>;\r\n  }\r\n\r\n}\r\n\r\nexport default SignupScreen;\r\n"]},"metadata":{},"sourceType":"module"}